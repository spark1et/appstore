{"ast":null,"code":"var _jsxFileName = \"/Users/sparklet/appstore-client/appstore/src/components/PostApps.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Form, Input, InputNumber, Button, message } from \"antd\";\nimport { uploadApp } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst PostApps = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef(null);\n  const handleFormSubmit = async data => {\n    const {\n      files\n    } = fileInputRef.current;\n    setLoading(true);\n    try {\n      await uploadApp(data, files[0]);\n      message.success(\"upload successfully\");\n    } catch (error) {\n      message.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ...layout,\n    onFinish: handleFormSubmit,\n    style: {\n      maxWidth: 1000,\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"title\",\n      label: \"Title\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"description\",\n      label: \"Description\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        autoSize: {\n          minRows: 2,\n          maxRows: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"picture\",\n      label: \"Picture\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/png, image/jpeg\",\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"price\",\n      label: \"Price\",\n      rules: [{\n        required: true,\n        type: \"number\",\n        min: 0\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {\n        prefix: \"$\",\n        precision: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        ...layout.wrapperCol,\n        offset: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PostApps, \"2WA6ylbgTVVvaJ2jeq4fF7USxXM=\");\n_c = PostApps;\nexport default PostApps;\nvar _c;\n$RefreshReg$(_c, \"PostApps\");","map":{"version":3,"names":["React","useRef","useState","Form","Input","InputNumber","Button","message","uploadApp","jsxDEV","_jsxDEV","layout","labelCol","span","wrapperCol","PostApps","_s","loading","setLoading","fileInputRef","handleFormSubmit","data","files","current","success","error","onFinish","style","maxWidth","margin","children","Item","name","label","rules","required","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","autoSize","minRows","maxRows","type","accept","ref","min","prefix","precision","offset","htmlType","_c","$RefreshReg$"],"sources":["/Users/sparklet/appstore-client/appstore/src/components/PostApps.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Form, Input, InputNumber, Button, message } from \"antd\";\nimport { uploadApp } from \"../utils\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst PostApps = () => {\n  const [loading, setLoading] = useState(false);\n\n  const fileInputRef = useRef(null);\n\n  const handleFormSubmit = async (data) => {\n    const { files } = fileInputRef.current;\n\n    setLoading(true);\n\n    try {\n      await uploadApp(data, files[0]);\n      message.success(\"upload successfully\");\n    } catch (error) {\n      message.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Form\n      {...layout}\n      onFinish={handleFormSubmit}\n      style={{ maxWidth: 1000, margin: \"auto\" }}\n    >\n      <Form.Item name=\"title\" label=\"Title\" rules={[{ required: true }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"description\"\n        label=\"Description\"\n        rules={[{ required: true }]}\n      >\n        <Input.TextArea autoSize={{ minRows: 2, maxRows: 6 }} />\n      </Form.Item>\n      <Form.Item name=\"picture\" label=\"Picture\" rules={[{ required: true }]}>\n        <input type=\"file\" accept=\"image/png, image/jpeg\" ref={fileInputRef} />\n      </Form.Item>\n      <Form.Item\n        name=\"price\"\n        label=\"Price\"\n        rules={[{ required: true, type: \"number\", min: 0 }]}\n      >\n        <InputNumber prefix=\"$\" precision={2} />\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default PostApps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}